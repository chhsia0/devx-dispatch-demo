resource "src-repo": {
  type: "git"
  param url: "$(context.git.url)"
  param revision: "$(context.git.commit)"
}

resource "docker-image": {
  type: "image"
  param url: "docker.io/chhsiao/devx-dispatch-demo"
}

task "unit-test": {
  inputs: ["src-repo"]
  steps: [
    {
      name: "go-test"
      image: "golang:1.13.0-buster"
      command: ["go", "test", "./..."]
      workingDir: "/workspace/src-repo"
      env: [
        {
          name: "SLEEP_DURATION"
          value: "5s"
        }
      ]
    }
  ]
}

task "build-image": {
  inputs: ["src-repo"]
  outputs: ["docker-image"]
  deps: ["unit-test"]
  steps: [
    {
      name: "find"
      image: "alpine"
      command: ["find", "/home/builder"]
    },
    {
      name: "see-creds"
      image: "alpine"
      command: ["cat", "/home/builder/.docker/config.json"]
    },
    {
      name: "build-and-push"
      image: "gcr.io/kaniko-project/executor"
      args: [
        "--destination=$(outputs.resources.docker-image.url):$(context.build.name)",
        "--context=/workspace/src-repo",
        "--oci-layout-path=/workspace/output/docker-image",
        "--dockerfile=/workspace/src-repo/Dockerfile"
      ]
    }
  ]
}

task "integration-test": {
  inputs: ["docker-image"]
  steps:[
    {
      name: "run-test"
      image: "$(inputs.resources.docker-image.url)@$(inputs.resources.docker-image.digest)"
      command: ["/hello-app.test"]
      env: [
        {
          name: "SLEEP_DURATION"
          value: "5s"
        }
      ]
    }
  ]
}

actions: [
  {
    tasks: ["integration-test"]
    on pull_request: {
      chatops: ["test"]
    }
  },
  {
    tasks: ["integration-test"]
    on pull_request: {}
  }
]
