#!mesosphere/dispatch-starlark:v0.6

load("github.com/mesosphere/dispatch-catalog/starlark/stable/kaniko@0.0.7", "kaniko")
load("github.com/mesosphere/dispatch-catalog/starlark/stable/pipeline@0.0.7", "image_reference", "push")
load("github.com/mesosphere/dispatch-catalog/starlark/stable/git@0.0.7", "git_resource", "git_checkout_dir", "git_revision")

src_repo = git_resource("src-repo")

gitops_repo = git_resource("gitops-repo",
    url="https://github.com/chhsia0/devx-dispatch-gitops-demo",
    revision="jenkins-demo"
)

docker_image = kaniko("build-image", src_repo, "chhsiao/devx-dispatch-demo")

dind_task("deploy",
    inputs=[src_repo, docker_image, gitops_repo],
    steps=[
        k8s.corev1.Container(
            name="update-gitops-repo",
            image="mesosphere/update-gitops-repo:1.2.2",
            workingDir=git_checkout_dir(gitops_repo),
            args=[
                "-git-revision={}".format(git_revision(src_repo)),
                "-base-branch={}".format(git_revision(gitops_repo)),
                "-create-pull-request",
                "-merge-pull-request",
                "-substitute=imageName={}".format(image_reference(docker_image))
            ]
        ),
        k8s.corev1.Container(
            name="wait-for-deployment",
            image="mesosphere/dispatch:1.3.0-beta1",
            args=["gitops", "app", "wait", "--sync", "jenkins-demo"]
        )
    ]
)

action(tasks=["deploy"], on=push(branches=["jenkins-demo"]))
